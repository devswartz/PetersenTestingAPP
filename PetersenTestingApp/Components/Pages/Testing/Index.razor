@page "/testing"
@using Microsoft.AspNetCore.Components.QuickGrid

<div class="border rounded-sm bg-white shadow px-4 py-2">

    <div class="w-full h-screen flex flex-col">

        @if (!Loaded)
        {
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div>@errorMessage</div>
            }
            else
            {
                <div class="w-full h-4/5 flex align-self-center items-center justify-center  ">
                    <span class="loader-spinner "></span>
                </div>
            }
        }
        else
        {
            <div class="flex flex-col px-2 space-y-4">

                <div class="flex justify-start space-x-3 text-sm">
                    
                    <div>
                        <label for="closed_status">Closed Status</label>
                        <select class="text-sm" value="@StatusSearch" @onchange="OnSearchStatus" id="closed_status">
                            <option value="0">No</option>
                            <option value="1">Yes</option>
                            <option value="2" selected>All</option>
                        </select>
                    </div>

                    <div>
                        <input class="text-sm" type="text" value="@MoRefSearch" @oninput="OnSearchMoInput" placeholder="mo reference" />
                    </div>
                    <div>
                        <input class="text-sm" type="text" value="@ItemSearch" @oninput="OnSearchItemInput" placeholder="Item Number" />
                    </div>

                    <!--
                    <div>
                        <label for="closed_status">Closed Status</label>
                        <select class="text-sm" value="@StatusSearch" @onchange="_ => DebouncedSearchAsync()" id="closed_status">
                            <option value="0">No</option>
                            <option value="1">Yes</option>
                            <option value="2" selected>All</option>
                        </select>
                    </div>

                    <div>
                        <input class="text-sm" type="text" @bind-value="MoRefSearch" @bind-value:event="OnSearchMoInput" placeholder="mo reference" />
                    </div>
                    <div>
                        <input class="text-sm" type="text" @bind-value="ItemSearch" @bind-value:event="OnSearchItemInput" placeholder="Item Number" />
                    </div>
                    -->


                </div>

                <div class="flex justify-between space-x-2">

                    <div class="h-[35vh] overflow-y-auto border border-gray-200 rounded px-2 text-xs ">

                        <!-- Header Row -->
                        <div class="grid grid-cols-[1fr_100px_100px_100px_1fr_100px_100px_100px_100px_100px_100px_100px_100px] font-semibold border-b border-gray-400 pb-1 pt-1 mb-1 sticky top-0 z-5 bg-white">

                            <div>CustomerName</div>
                            <div>Ref Num</div>
                            <div>Test Num</div>
                            <div>Item</div>
                            <div>ItemDesc</div>
                            <div>Order Date</div>
                            <div>Due Date</div>
                            <div>Rated PSI</div>
                            <div>Deflated Dia</div>
                            <div>Max Inflated Dia</div>
                            <div>Closed</div>
                            <div>Closed Date Time</div>
                            <div>User</div>


                            @if (isTop && TopListHeaders?.Any() == true)
                            {
                                <!-- Data Rows -->
                                @foreach (var p in TopListHeaders)
                                {

                                    <div class="whitespace-nowrap overflow-hidden text-ellipsis border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.CustomerName</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.ReferenceNumber</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.TestNumber</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.Item</div>
                                    <div class="whitespace-nowrap overflow-hidden text-ellipsis border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.ItemDesc</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.ORDDate?.ToString("MM-dd-yyyy")</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.DueDate?.ToString("MM-dd-yyyy")</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.RatedMaxInflationPSI</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.DeflatedOrInternalDiaInches</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.MaxInflatedDiaInches</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.Closed</div>
                                    <div class="whitespace-nowrap overflow-hidden text-ellipsis border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.ClosedDT</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.AudtUser</div>

                                }
                            }

                            else if (!isTop && FilteredHeaders?.Any() == true)
                            {

                                <!-- Data Rows -->
                                @foreach (var p in FilteredHeaders)
                                {

                                    <div class="whitespace-nowrap overflow-hidden text-ellipsis border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.CustomerName</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.ReferenceNumber</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.TestNumber</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.Item</div>
                                    <div class="whitespace-nowrap overflow-hidden text-ellipsis border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.ItemDesc</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.ORDDate?.ToString("MM-dd-yyyy")</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.DueDate?.ToString("MM-dd-yyyy")</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.RatedMaxInflationPSI</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.DeflatedOrInternalDiaInches</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.MaxInflatedDiaInches</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.Closed</div>
                                    <div class="whitespace-nowrap overflow-hidden text-ellipsis border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.ClosedDT</div>
                                    <div class="border-b border-gray-100" @onclick="() => GetItemData(p.HeaderId)">@p.AudtUser</div>


                                }

                            }
                            


                            else
                            {
                                <div class="col-span-13  text-center text-gray-500 py-4">
                                    No items to display.
                                </div>
                            }

                        </div>
                    

                    </div>

                    <button type="button" @onclick="showTopData" class="h-8 w-20 px-1 shadow bg-gray-600  text-sm rounded-xsm hover:bg-gray-800">
                        Top 50
                    </button>


                </div>

                <div class="bg-white border rounded shadow-sm text-sm flex justify-around">

                    <div>
                        
                        <div class="flex justify-between space-x-4 px-3 py-2">
                            <div class="flex items-center space-x-1">
                                <label class="font-medium text-gray-600">HeaderID:</label>
                                <span>@currentTestObject.HeaderId</span>
                            </div>
                            <div class="flex items-center space-x-1">
                                <label class="font-medium text-gray-600">ORDUNIQ:</label>
                                <span>@currentTestObject.ORDUNIQ</span>
                            </div>
                        </div>

                        <div class="flex justify-between space-x-4 px-3 py-2">
                            <!-- Open button -->
                            <button class="px-2 py-1 bg-white text-red-500 border rounded hover:bg-gray-300 font-semibold"
                                    @onclick="() => OpenFlationDetail(tempHeader)">
                                Open
                            </button>

                            <!-- Next Test button -->
                            <button class="px-2 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm">
                                Next Test #
                            </button>

                        </div>
                    </div>

                    <div>
                        <div class="flex justify-between space-x-4 px-3 py-2">


                            <!-- Label/value pairs -->
                            <div class="flex items-center space-x-1">
                                <label class="font-medium text-gray-600">Ref Num:</label>
                                <span>@currentTestObject.ReferenceNumber</span>
                            </div>
                            <div class="flex items-center space-x-1">
                                <label class="font-medium text-gray-600">Item:</label>
                                <span>@currentTestObject.Item</span>
                            </div>
                            <div class="flex items-center space-x-1">
                                <label class="font-medium text-gray-600">Description:</label>
                                <span>@currentTestObject.ItemDesc</span>
                            </div>
                            <div class="flex items-center space-x-1">
                                <label class="font-medium text-gray-600">Test Num:</label>
                                <span>@currentTestObject.TestNumber</span>
                            </div>
                            
                        </div>

                        <div class="flex justify-between space-x-4 px-3 py-2">
                            <div class="flex items-center space-x-1">
                                <label class="font-medium text-gray-600">Customer:</label>
                                <span>@currentTestObject.Customer</span>
                            </div>
                            <div class="flex items-center space-x-1 max-w-xs truncate">
                                <label class="font-medium text-gray-600">Name:</label>
                                <span class="truncate">@currentTestObject.CustomerName</span>
                            </div>
                            <div class="flex items-center space-x-1">
                                <label class="font-medium text-gray-600">Rated Max Inflation:</label>
                                <span>@currentTestObject.RatedMaxInflationPSI</span>
                            </div>
                            <div class="flex items-center space-x-1">
                                <label class="font-medium text-gray-600">Defl. Diameter:</label>
                                <span>@currentTestObject.DeflatedOrInternalDiaInches</span>
                            </div>
                            <div class="flex items-center space-x-1">
                                <label class="font-medium text-gray-600">Max Infl. Diameter:</label>
                                <span>@currentTestObject.MaxInflatedDiaInches</span>
                            </div>

                        </div>
                    </div>



                </div>

                         
                <div class="flex justify-between text-sm">

                    <div class="w-[55%] overflow-y-auto border rounded p-2 text-xs">

                        <div class="grid grid-cols-[1fr_100px_1fr_100px_100px_100px_100px_1fr_100px] font-semibold border-b border-gray-400 pb-1 mb-1">
                            <div>Start Test</div>
                            <div>Infl. Press (PSIG)</div>
                            <div>Inflation Medium</div>
                            <div>Area Temp</div>
                            <div>Test Status</div>
                            <div>Failure Reason</div>
                            <div>User</div>
                            <div>End Test</div>
                            <div>Action</div>
                        </div>
                        
                        @if (list_InflationPressures?.Any() == true)
                        {
                            @foreach(var p in list_InflationPressures)
                            {
                                <div class="cursor-pointer grid grid-cols-[1fr_100px_1fr_100px_100px_100px_100px_1fr_100px]  border-b border-gray-100 py-1 hover:bg-gray-50">
                                    <div>@p.StartTestDateTime.ToString("MM-dd-yyyy hh:mm tt")</div>
                                    <div>@p.InflatedPSIG.ToString("0.##")</div>
                                    <div>@p.InflationMedium</div>
                                    <div>@p.AreaTempFahrenheit.ToString("0.##")</div>
                                    <div>@p.TestStatus</div>
                                    <div>@p.FailureReason</div>
                                    <div>@p.AUDTUser</div>
                                    <div>@p.EndTestDateTime?.ToString("MM-dd-yyyy hh:mm tt")</div>
                                    <div>
                                        <button class="px-2 py-1 bg-blue-600 text-white rounded text-xs hover:bg-blue-700"
                                                @onclick="() => ShowInflationDetail(p.DetailID)">
                                            View
                                        </button>
                                    </div>
                                </div>
                            }

                        }

                    </div>


                    <div class="w-[45%] border rounded p-2 bg-white shadow-sm space-y-1">

                        <div class="grid grid-cols-2 gap-4">

                            <!-- Start Test Date/Time -->
                            <div>
                                <label class="block text-xs font-medium text-gray-600">Start Test</label>
                                <input type="datetime-local"
                                        @bind="currentInflationPress.StartTestDateTime"
                                        class="mt-1 w-full border-gray-300 rounded px-2 py-1 text-sm" />
                            </div>

                            <!-- End Test Date/Time -->
                            <div>
                                <label class="block text-xs font-medium text-gray-600">End Test</label>
                                <input type="datetime-local"
                                        @bind="currentInflationPress.EndTestDateTime"
                                        class="mt-1 w-full border-gray-300 rounded px-2 py-1 text-sm" />
                            </div>
                          
                            <!-- User -->
                            <div>
                                <label class="block text-xs font-medium text-gray-600">User</label>
                                <select @bind="currentInflationPress.AUDUser"
                                        class="mt-1 w-full border-gray-300 rounded px-2 py-1 text-sm bg-white">
                                    @foreach (var u in users)
                                    {
                                        <option value="@u.UserId">@u.Name</option>
                                    }
                                </select>
                            </div>

                            <!-- Initials -->
                            <div>
                                <label class="block text-xs font-medium text-gray-600">Initial</label>
                                <input type="text"
                                       @bind="currentInflationPress.Initial"
                                       class="mt-1 w-full border-gray-300 rounded px-2 py-1 text-sm" />
                            </div>

                            <!-- Inflation Pressure -->
                            <div>
                                <label class="block text-xs font-medium text-gray-600">Pressure (PSIG)</label>
                                <div class="flex">
                                    <input type="number"
                                            @bind="currentInflationPress.InflatedPSIG"
                                            step="0.01"
                                            class="mt-1 w-1/2 border-gray-300 rounded-l px-2 py-1 text-sm" />
                                    <span class="mt-1 inline-flex items-center px-2 border border-l-0 border-gray-300 rounded-r bg-gray-50 text-sm">
                                        PSIG
                                    </span>
                                </div>
                            </div>

                            <!-- Inflation Medium -->
                            <div>
                                <label class="block text-xs font-medium text-gray-600">Medium</label>
                                <select @bind="currentInflationPress.InflationMedium"
                                        class="mt-1 w-1/2 border-gray-300 rounded px-2 py-1 text-sm bg-white">
                                    @foreach (var i in InflationMedium)
                                    {
                                        <option value="@i">@i</option>
                                    }
                                </select>
                            </div>

                            <!-- Test Status -->
                            <div>
                                <label class="block text-xs font-medium text-gray-600">Status</label>
                                <select @bind="currentInflationPress.TestStatus"
                                        class="mt-1 w-1/2 border-gray-300 rounded px-2 py-1 text-sm bg-white">
                                    @foreach (var s in TestStatus)
                                    {
                                        <option value="@s">@s</option>
                                    }
                                </select>
                            </div>

                            <!-- Failure Reason -->
                            <div>
                                <label class="block text-xs font-medium text-gray-600">Failure Reason</label>
                                <select @bind="currentInflationPress.FailureReason"
                                        class="mt-1 w-1/2 border-gray-300 rounded px-2 py-1 text-sm bg-white">
                                    @foreach (var f in FailureReason)
                                    {
                                        <option value="@f">@f</option>
                                    }
                                </select>
                            </div>

                            <!-- Comments -->
                            <div class="col-span-2">
                                <label class="block text-xs font-medium text-gray-600">Comments</label>
                                <textarea rows="1"
                                            @bind="currentInflationPress.Comments"
                                            class="mt-1 w-full border-gray-300 rounded px-2 py-1 text-sm"></textarea>
                            </div>

                        </div>

                        <!-- Save button -->
                        <button class="mt-2 w-20 px-3 py-1.5 bg-green-600 text-white rounded text-sm hover:bg-green-700">
                            Save
                        </button>

                    </div>

                </div>
         
            </div>

            

            
        }



    </div>
</div>
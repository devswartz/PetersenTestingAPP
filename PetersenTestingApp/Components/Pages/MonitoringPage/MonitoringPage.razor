@page "/monitoring"
@using PetersenTestingApp.Components.Monitoring
@using PetersenTestingAppLibrary.Classes

<div class="p-6 space-y-10 w-full">

    <!-- Header -->
    <h1 class="text-3xl font-bold mb-4">Pressure Monitoring Dashboard</h1>

    <style>
        .sensor-grid-wrapper {
            all: initial;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 1rem;
            max-width: 100vw;
            overflow-x: hidden;
            padding: 1rem;
            box-sizing: border-box;
        }
    </style>

    <div class="sensor-grid-wrapper">
        @foreach (var reading in liveReadings
                .Where(r => (DateTime.Now - r.TimeStamp).TotalHours < 12))
        {
            <LiveSensorCard Reading="reading" />
        }
    </div>

    <!-- Historical Chart Section -->
    <div class="mt-12 space-y-6 w-full px-4">
        <h2 class="text-2xl font-bold text-center">Historical Pressure Plot</h2>

        <div class="flex justify-center w-full py-6">
            <EditForm Model="query" OnValidSubmit="OnQuerySubmit"
                      class="flex items-end gap-x-4 bg-white p-6 rounded shadow">

                <div class="flex flex-col px-2">
                    <label class="text-sm font-medium text-gray-700 mb-1">Sensor ID</label>
                    <InputText @bind-Value="query.SensorId"
                               class="border border-gray-300 rounded px-3 py-2 w-48" />
                </div>

                <div class="flex flex-col px-2">
                    <label class="text-sm font-medium text-gray-700 mb-1">Start</label>
                    <input type="datetime-local" @bind="query.StartDate"
                           class="border border-gray-300 rounded px-3 py-2 w-60" />
                </div>

                <div class="flex flex-col px-2">
                    <label class="text-sm font-medium text-gray-700 mb-1">End</label>
                    <input type="datetime-local" @bind="query.EndDate"
                           class="border border-gray-300 rounded px-3 py-2 w-60" />
                </div>

                <div class="flex flex-col px-2">
                    <label class="invisible">Plot</label>
                    <button type="submit"
                            class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 w-full h-[42px]">
                        Plot
                    </button>
                </div>

            </EditForm>
        </div>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <p class="text-red-600">@errorMessage</p>
        }

        @if (plotData?.Any() == true)
        {
            <PressureHistoryPlot Data="@plotData"/>
        }
    </div>
</div>
